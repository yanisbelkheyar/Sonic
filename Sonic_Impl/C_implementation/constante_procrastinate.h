#include <stdint.h>
#include "struct.h"

int shift_1_128[25] = {1,111,33,79,65,47,97,15,1,111,33,79,65,47,97,15,1,111,33,79,65,47,97,15,1};
int shift_7_128[25] = {7,9,103,41,71,73,39,105,7,9,103,41,71,73,39,105,7,9,103,41,71,73,39,105,7};
int shift_32_128[25] = {32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32};

int shift_5_128[25] = {5,43,37,11,69,107,101,75,5,43,37,11,69,107,101,75,5,43,37,11,69,107,101,75,5};

//inverse of theta for Sonic256 fast version
int shift_14_128[25] = {14,18,78,82,14,18,78,82,14,18,78,82,14,18,78,82,14,18,78,82,14,18,78,82,14};
int shift_64_128[25] = {64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64};
int shift_28_128[25] = {28,36,28,36,28,36,28,36,28,36,28,36,28,36,28,36,28,36,28,36,28,36,28,36,28};
int shift_56_128[25] = {56,72,56,72,56,72,56,72,56,72,56,72,56,72,56,72,56,72,56,72,56,72,56,72,56};
int shift_112_128[25] = {112,16,112,16,112,16,112,16,112,16,112,16,112,16,112,16,112,16,112,16,112,16,112,16,112};
int shift_96_128[25] = {96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96,32,96};
int shift_100_128[25] = {100,92,100,92,100,92,100,92,100,92,100,92,100,92,100,92,100,92,100,92,100,92,100,92,100};

int shift_1_256[17] = {1 ,239 ,33 ,207 ,65 ,175 ,97 ,143 ,129 ,111 ,161 ,79 ,193 ,47 ,225 ,15 ,1 };
int shift_7_256[17] = {7 ,137 ,231 ,169 ,199 ,201 ,167 ,233 ,135 ,9 ,103 ,41 ,71 ,73 ,39 ,105 ,7 };
int shift_32_256[17] = {32 ,224 ,32 ,224 ,32 ,224 ,32 ,224 ,32 ,224 ,32 ,224 ,32 ,224 ,32 ,224 ,32 };

int shift_5_256[17] = {5 ,171 ,165 ,11 ,69 ,107 ,229 ,203 ,133 ,43 ,37 ,139 ,197 ,235 ,101 ,75 ,5 };

//inverse theta for Sonic512 fast
int shift_14_256[17] = {14 ,18 ,206 ,82 ,142 ,146 ,78 ,210 ,14 ,18 ,206 ,82 ,142 ,146 ,78 ,210 ,14 };
int shift_64_256[17] = {64 ,192 ,64 ,192 ,64 ,192 ,64 ,192 ,64 ,192 ,64 ,192 ,64 ,192 ,64 ,192 ,64 };
int shift_28_256[17] = {28 ,36 ,156 ,164 ,28 ,36 ,156 ,164 ,28 ,36 ,156 ,164 ,28 ,36 ,156 ,164 ,28 };
int shift_128_256[17] = {128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128};
int shift_56_256[17] = {56,72,56,72,56,72,56,72,56,72,56,72,56,72,56,72,56};
int shift_112_256[17] = {112,144,112,144,112,144,112,144,112,144,112,144,112,144,112,144,112};
int shift_224_256[17] = {224,32,224,32,224,32,224,32,224,32,224,32,224,32,224,32,224};
int shift_192_256[17] = {192,64,192,64,192,64,192,64,192,64,192,64,192,64,192,64,192};
int shift_200_256[17] = {200,184,200,184,200,184,200,184,200,184,200,184,200,184,200,184,200};


//constante for the procrastinated versions 

cst_state_128 c_128_f9_procr = {.data_64 ={ 0x8000800080008000 , 0x8000800000000000}, .size_64 = 2};     
cst_state_128 c_128_47_procr = {.data_64 ={ 0x8000800080000000 , 0x80000000}, .size_64 = 2};    
cst_state_128 c_128_eb_procr = {.data_64 ={ 0x8000800080008000 , 0x800000008000}, .size_64 = 2};    
cst_state_128 c_128_37_procr = {.data_64 ={ 0x8000800080000000 , 0x8000800000000000}, .size_64 = 2};    
cst_state_128 c_128_69_procr = {.data_64 ={ 0x8000000080008000 , 0x800000000000}, .size_64 = 2};    
cst_state_128 c_128_3b_procr = {.data_64 ={ 0x8000800000008000 , 0x8000800000000000}, .size_64 = 2};    
cst_state_128 c_128_49_procr = {.data_64 ={ 0x8000000080000000 , 0x800000000000}, .size_64 = 2};    
cst_state_128 c_128_3a_procr = {.data_64 ={ 0x800000008000 , 0x8000800000000000}, .size_64 = 2};    
cst_state_128 c_128_b0_procr = {.data_64 ={ 0x800000008000 , 0x8000000000000000}, .size_64 = 2};    
cst_state_128 c_128_7d_procr = {.data_64 ={ 0x8000000080008000 , 0x8000800080000000}, .size_64 = 2};    
cst_state_128 c_128_5b_procr = {.data_64 ={ 0x8000000080000000 , 0x8000800000008000}, .size_64 = 2};    
cst_state_128 c_128_4a_procr = {.data_64 ={ 0x800000008000 , 0x80000000}, .size_64 = 2};    
cst_state_128 c_128_32_procr = {.data_64 ={ 0x8000 , 0x8000000000008000}, .size_64 = 2};    
cst_state_128 c_128_71_procr = {.data_64 ={ 0x8000000000000000 , 0x8000800080000000}, .size_64 = 2};    
cst_state_128 c_128_7b_procr = {.data_64 ={ 0x8000000080008000 , 0x8000800000008000}, .size_64 = 2};    
cst_state_128 c_128_4b_procr = {.data_64 ={ 0x8000800000008000 , 0x80000000}, .size_64 = 2};    
cst_state_128 c_128_cb_procr = {.data_64 ={ 0x8000800080000000 , 0x800000008000}, .size_64 = 2};    
cst_state_128 c_128_36_procr = {.data_64 ={ 0x800080000000 , 0x8000800000000000}, .size_64 = 2};    
cst_state_128 c_128_90_procr = {.data_64 ={ 0x800000000000 , 0x8000000000000000}, .size_64 = 2};    
cst_state_128 c_128_7c_procr = {.data_64 ={ 0x80008000 , 0x8000800080000000}, .size_64 = 2};    


cst_state_256 c_256_f9_procr = { .data_64= { 0x8000000080000000 , 0x8000000080000000 , 0x8000000080000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_47_procr = { .data_64= { 0x8000000080000000 , 0x8000000000000000 , 0x0 , 0x8000000000000000}, .size_64 = 4};
cst_state_256 c_256_eb_procr = { .data_64= { 0x8000000080000000 , 0x8000000080000000 , 0x80000000 , 0x80000000}, .size_64 = 4};
cst_state_256 c_256_37_procr = { .data_64= { 0x8000000080000000 , 0x8000000000000000 , 0x8000000080000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_69_procr = { .data_64= { 0x8000000000000000 , 0x8000000080000000 , 0x80000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_3b_procr = { .data_64= { 0x8000000080000000 , 0x80000000 , 0x8000000080000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_49_procr = { .data_64= { 0x8000000000000000 , 0x8000000000000000 , 0x80000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_3a_procr = { .data_64= { 0x80000000 , 0x80000000 , 0x8000000080000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_b0_procr = { .data_64= { 0x80000000 , 0x80000000 , 0x8000000000000000 , 0x0}, .size_64 = 4};
cst_state_256 c_256_7d_procr = { .data_64= { 0x8000000000000000 , 0x8000000080000000 , 0x8000000080000000 , 0x8000000000000000}, .size_64 = 4};
cst_state_256 c_256_5b_procr = { .data_64= { 0x8000000000000000 , 0x8000000000000000 , 0x8000000080000000 , 0x80000000}, .size_64 = 4};
cst_state_256 c_256_4a_procr = { .data_64= { 0x80000000 , 0x80000000 , 0x0 , 0x8000000000000000}, .size_64 = 4};
cst_state_256 c_256_32_procr = { .data_64= { 0x0 , 0x80000000 , 0x8000000000000000 , 0x80000000}, .size_64 = 4};
cst_state_256 c_256_71_procr = { .data_64= { 0x8000000000000000 , 0x0 , 0x8000000080000000 , 0x8000000000000000}, .size_64 = 4};
cst_state_256 c_256_7b_procr = { .data_64= { 0x8000000000000000 , 0x8000000080000000 , 0x8000000080000000 , 0x80000000}, .size_64 = 4};
cst_state_256 c_256_4b_procr = { .data_64= { 0x8000000080000000 , 0x80000000 , 0x0 , 0x8000000000000000}, .size_64 = 4};
